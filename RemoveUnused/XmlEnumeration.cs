using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;
using NUnit.Framework;

namespace RemoveUnused
{
    internal class XmlEnumeration
    {
        [Test]
        public void CanParseXmlFile()
        {
            var xml = @"<?xml version='1.0' encoding='utf-8'?>
<!-- Generated by JetBrains ReSharper 2020.2.4 -->
<Report ToolsVersion='202.0.20200925.65451'>
  <Issues>
    <Project Name='SQLCompareEngine'>
      <Issue TypeId='UnusedMember.Local' File='Engine\SQLCompareEngine\Engine\Comparison\Difference.cs' Offset='8859-8877' Line='259' Message=""Enum member 'MustRebuildTo1Mask' is never used"" />
    </Project>
  </Issues>
</Report>";
            var issues = ParseReSharperReport(xml);
            var issue = issues.Single();
            Assert.NotNull(issue);
            Assert.AreEqual("UnusedMember.Local", issue.TypeId);
            Assert.AreEqual("Engine\\SQLCompareEngine\\Engine\\Comparison\\Difference.cs", issue.File);
            Assert.AreEqual(8859, issue.From);
            Assert.AreEqual(8877, issue.To);
            Assert.AreEqual(259, issue.Line);
            Assert.AreEqual("Enum member 'MustRebuildTo1Mask' is never used", issue.Message);
        }

        private static IEnumerable<Issue> ParseReSharperReport(string xml)
        {
            var doc = XDocument.Parse(xml);
            var issues = doc.Elements("Report")?.Elements("Issues")?.Elements("Project").Elements("Issue")
                .Select(e => new Issue
                {
                    TypeId = e.Attribute("TypeId")?.Value,
                    File = e.Attribute("File")?.Value,
                    From = int.Parse(e.Attribute("Offset").Value.Split('-')[0]),
                    To = int.Parse(e.Attribute("Offset").Value.Split('-')[1]),
                    Line = int.Parse(e.Attribute("Line")?.Value),
                    Message = e.Attribute("Message")?.Value
                });
            return issues.ToArray();
        }
    }
}
